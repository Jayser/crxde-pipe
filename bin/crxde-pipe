#!/usr/bin/env node

var fs = require('fs');
var program = require('commander');
var pkg = require('../package.json');

var paths = [ process.cwd() ];
var options = {};

var parseRegex = function(str) {
  return new RegExp(str);
};

var parseServer = function(srt) {
  var server = {};
  var parts = (srt || '').split(':');
  var keys = ['host', 'port'];
  parts.forEach(function(val, i) {
    var key = keys[i];
    if (val) {
      server[key] = val;
    }
  });

  return server;
};

program
  .version(pkg.version)
  .usage('[options] <dir...>')
  .option('-m, --match [regex]', 'pattern matching CRX root under your files', parseRegex)
  .option('-i, --ignore [regex]', 'pattern used to exclude files from the watch', parseRegex)
  .option('-I, --interval [ms]', 'indicate how often file system should be polled', parseInt)
  .option('-s, --server [host:port]', 'locate where CRX repository is running', parseServer)
  .option('-d, --dispatcher [host:port]', 'locate where Dispatcher is running', parseServer)
  .parse(process.argv);

if (program.args.length) {
  paths = program.args.filter(function (path) {
    return fs.existsSync(path);
  });

  if (!paths.length) {
    throw new Error('None of specified paths is valid.');
  }
}

program.options.forEach(function(option) {
  var key = option.name();
  var val = program[key];

  if (val != null && key !== 'version') {
    options[key] = program[key];
  }
});

require('../').pipe(paths, options);
